FROM ubuntu:18.04

LABEL maintainer="Terry Simons <terry@hu.ma.ne>"

WORKDIR /root/

ARG DOCKER_USER=root
ARG DOCKER_USER_ID=0
ARG DOCKER_GROUP_ID=0
ARG DOCKER_USER_HOME=/root
ARG DOCKER_JAVA_VERSION=openjdk-8-jdk

ENV PATH="/android_build/bin:${PATH}"
ENV DOCKER_USER=${DOCKER_USER}
ENV DOCKER_USER_ID=${DOCKER_USER_ID}
ENV DOCKER_GROUP_ID=${DOCKER_GROUP_ID}
ENV DOCKER_USER_HOME=${DOCKER_USER_HOME}
ENV DOCKER_JAVA_VERSION=${DOCKER_JAVA_VERSION}

RUN groupadd --gid ${DOCKER_GROUP_ID} ${DOCKER_USER} || echo "Group add failed."
RUN useradd --home-dir=${DOCKER_USER_HOME} --create-home --uid ${DOCKER_USER_ID} --gid ${DOCKER_GROUP_ID} ${DOCKER_USER} || echo "User add failed."

RUN apt-get update && apt-get install -y \
  ca-certificates \
  gnupg

ENV DEBIAN_FRONTEND=noninteractive
ENV APT_LISTCHANGES_FRONTEND=none

# Enable 32-bit package installations
#
# Install 32-bit packages by appending :i386 to the normal apt flows
RUN dpkg --add-architecture i386

# Add mirrors in case the main repository is offline.
RUN echo "deb mirror://mirrors.ubuntu.com/mirrors.txt bionic main restricted" >> /etc/apt/sources.list
RUN echo "deb mirror://mirrors.ubuntu.com/mirrors.txt bionic-updates main restricted" >> /etc/apt/sources.list
RUN echo "deb mirror://mirrors.ubuntu.com/mirrors.txt bionic-backports main restricted" >> /etc/apt/sources.list
RUN echo "deb mirror://mirrors.ubuntu.com/mirrors.txt bionic-security main restricted" >> /etc/apt/sources.list

RUN apt-get update && apt-get upgrade -y
RUN apt-get install -y \
    bsdmainutils \
    ${DOCKER_JAVA_VERSION} \
    git-core \
    flex \
    bison \
    gperf \
    build-essential \
    zip curl \
    zlib1g-dev \
    gcc-multilib \
    g++-multilib \
    libc6-dev-i386 \
    lib32ncurses5-dev \
    x11proto-core-dev \
    libx11-dev \
    lib32z-dev \
    libgl1-mesa-dev \
    libxml2-utils \
    xsltproc \
    unzip \
    python \
    python3 \
    bc \
    libc6 \
    libxml-perl \
    libtinfo-dev \
    libncurses-dev \
    libssl-dev \
    rsync

# Allow downloading of xenial packages
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 40976EAF437D05B5
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32

# Switch to xenial for libmpfr4
RUN echo "deb mirror://mirrors.ubuntu.com/mirrors.txt xenial main restricted" > /etc/apt/sources.list
RUN echo "deb mirror://mirrors.ubuntu.com/mirrors.txt xenial-updates main restricted" >> /etc/apt/sources.list
RUN echo "deb mirror://mirrors.ubuntu.com/mirrors.txt xenial-backports main restricted" >> /etc/apt/sources.list
RUN echo "deb mirror://mirrors.ubuntu.com/mirrors.txt xenial-security main restricted" >> /etc/apt/sources.list

# Older packages which are no longer available.
RUN apt-get update && apt-get install -y \
    libmpfr4 

# Install repo
RUN mkdir -p /android_build/bin && curl https://storage.googleapis.com/git-repo-downloads/repo > /android_build/bin/repo && chmod a+x /android_build/bin/repo

RUN rm -rf /var/cache/apt && rm -rf /var/lib/apt/lists

# See http://archive.ubuntu.com/ubuntu/pool/universe/g/
ARG CC_VERSION=4.4
ARG CC_PKG_VERSION=4.4.7-8ubuntu1

# Install gcc ${CC_VERSION}
RUN mkdir -p /android_build/gcc

RUN curl http://archive.ubuntu.com/ubuntu/pool/universe/g/gcc-${CC_VERSION}/cpp-${CC_VERSION}_${CC_PKG_VERSION}_amd64.deb > \
         /android_build/gcc/cpp-${CC_VERSION}_${CC_PKG_VERSION}_amd64.deb
RUN curl http://archive.ubuntu.com/ubuntu/pool/universe/g/gcc-${CC_VERSION}/gcc-${CC_VERSION}-base_${CC_PKG_VERSION}_amd64.deb > \
         /android_build/gcc/gcc-${CC_VERSION}-base_${CC_PKG_VERSION}_amd64.deb
RUN curl http://archive.ubuntu.com/ubuntu/pool/universe/g/gcc-${CC_VERSION}/gcc-${CC_VERSION}_${CC_PKG_VERSION}_amd64.deb > \
         /android_build/gcc/gcc-${CC_VERSION}_${CC_PKG_VERSION}_amd64.deb
RUN curl http://archive.ubuntu.com/ubuntu/pool/universe/g/gcc-${CC_VERSION}/gcc-${CC_VERSION}-multilib_${CC_PKG_VERSION}_amd64.deb > \
         /android_build/gcc/gcc-${CC_VERSION}-multilib_${CC_PKG_VERSION}_amd64.deb

RUN dpkg -i \
    /android_build/gcc/cpp-${CC_VERSION}_${CC_PKG_VERSION}_amd64.deb \
    /android_build/gcc/gcc-${CC_VERSION}-base_${CC_PKG_VERSION}_amd64.deb \
    /android_build/gcc/gcc-${CC_VERSION}_${CC_PKG_VERSION}_amd64.deb \
    /android_build/gcc/gcc-${CC_VERSION}-multilib_${CC_PKG_VERSION}_amd64.deb

# Install g++ ${CC_VERSION}
RUN mkdir -p /android_build/g++

RUN curl http://archive.ubuntu.com/ubuntu/pool/universe/g/gcc-${CC_VERSION}/g++-${CC_VERSION}_${CC_PKG_VERSION}_amd64.deb > \
         /android_build/g++/g++-${CC_VERSION}_${CC_PKG_VERSION}_amd64.deb
RUN curl http://archive.ubuntu.com/ubuntu/pool/universe/g/gcc-${CC_VERSION}/libstdc++6-${CC_VERSION}-dev_${CC_PKG_VERSION}_amd64.deb > \
         /android_build/g++/libstdc++6-${CC_VERSION}-dev_${CC_PKG_VERSION}_amd64.deb
RUN curl http://archive.ubuntu.com/ubuntu/pool/universe/g/gcc-${CC_VERSION}/g++-${CC_VERSION}-multilib_${CC_PKG_VERSION}_amd64.deb > \
         /android_build/g++/g++-${CC_VERSION}-multilib_${CC_PKG_VERSION}_amd64.deb

RUN dpkg -i \
    /android_build/g++/g++-${CC_VERSION}_${CC_PKG_VERSION}_amd64.deb \
    /android_build/g++/libstdc++6-${CC_VERSION}-dev_${CC_PKG_VERSION}_amd64.deb \
    /android_build/g++/g++-${CC_VERSION}-multilib_${CC_PKG_VERSION}_amd64.deb

# Set gcc ${CC_VERSION} and g++ ${CC_VERSION} as default
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${CC_VERSION} 44
RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${CC_VERSION} 44

# Change dash to bash
RUN echo "dash dash/sh boolean false" | debconf-set-selections
RUN DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash

# Set working directory
RUN mkdir /aosp && chown ${DOCKER_USER}:${DOCKER_USER_GROUP} /aosp

USER ${DOCKER_USER}

WORKDIR /aosp
